import { Injectable } from '@nestjs/common';
import * as nodemailer from 'nodemailer';


@Injectable()
export class EmailService {
    private transporter;

    constructor() {
      this.transporter = nodemailer.createTransport({
        service: 'gmail',
        auth: {
          user: process.env.EMAIL_USERNAME,
          pass: process.env.EMAIL_PASSWORD,
        },
      });
    }
    async handleSendmailSignUp(email:string , otp:string)
    {
        const mailOptions = {
            from: process.env.EMAIL_USERNAME,
            to: email,
            subject: 'ThÃ´ng bÃ¡o Ä‘Äƒng kÃ­',
            text: `Báº¡n vá»«a Ä‘Äƒng kÃ­ tÃ i khoáº£n cá»§a mÃ¬nh.vui lÃ²ng xÃ¡c thá»±c tÃ i khoáº£n cá»§a báº¡n báº±ng mÃ£ OTP: ${otp}`,
          };
      
          await this.transporter.sendMail(mailOptions); 
          console.log(`ðŸ“¨ Email Ä‘Ã£ Ä‘Æ°á»£c gá»­i tá»›i: ${email}`);
    } 
    async handleSendmailSignIn(email:string)
    {
        const mailOptions = {
            from: process.env.EMAIL_USERNAME,
            to: email,
            subject: 'ThÃ´ng bÃ¡o Ä‘Äƒng nháº­p',
            text: `Báº¡n vá»«a Ä‘Äƒng nháº­p tÃ i khoáº£n cá»§a mÃ¬nh.`,
          };
      
          await this.transporter.sendMail(mailOptions); 
          console.log(`ðŸ“¨ Email Ä‘Ã£ Ä‘Æ°á»£c gá»­i tá»›i: ${email}`);
    }

    async handleForgotPassword(email:string,resetToken:string)
    {
      const mailOptions = {
        from: process.env.EMAIL_USERNAME,
        to:email,
        subject: 'Reset Password',
        text: `Click vÃ o link sau Ä‘á»ƒ Ä‘áº·t láº¡i máº­t kháº©u: http://localhost:5173/reset-password?token=${resetToken}`,
      };
  
      await this.transporter.sendMail(mailOptions);
      console.log(`ðŸ“¨ Email Ä‘Ã£ Ä‘Æ°á»£c gá»­i tá»›i: ${email}`);
    }

    async handleResetPassword(email:string) {
      const mailOptions = {
        from: process.env.EMAIL_USERNAME,
        to: email,
        subject: 'Reset Password',
        text: 'Your password has been successfully reset. If you did not request this, please contact support immediately.',
      };
      await this.transporter.sendMail(mailOptions)
      console.log(`ðŸ“§ Password reset confirmation sent to ${email}`);

    }

    async handleSendMailBookingTour(email:string) 
    {
      const mailOptions = {
        from: process.env.EMAIL_USERNAME,
        to: email,
        subject: 'Booking Tour',
        text: 'Booking tour has successfully.',
      };
      await this.transporter.sendMail(mailOptions)
      console.log(`ðŸ“§ Booking tour confirmation sent to ${email}`);

    }
}
